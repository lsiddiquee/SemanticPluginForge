name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    permissions:
      checks: write

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      working-directory: ./src/
      run: dotnet restore

    - name: Build
      working-directory: ./src/
      run: dotnet build --no-restore

    - name: Test
      working-directory: ./src/
      run: dotnet test --no-build -v Normal --logger trx --collect:"XPlat Code Coverage" --results-directory:"TestResults/Coverage/" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.ExcludeByAttribute=GeneratedCodeAttribute,CompilerGeneratedAttribute,ExcludeFromCodeCoverageAttribute

    - name: Generate Test Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
      with:
        reports: "./src/TestResults/Coverage/**/coverage.cobertura.xml"
        targetdir: "./src/TestResults/Reports"
        reporttypes: "JsonSummary"

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport
        path: ./src/TestResults

    - name: Check code coverage
      env:
        REPORT_PATH: ./src/TestResults/Reports/Summary.json
      run: |
        THRESHOLD=80
        COVERAGE=$(jq '.summary.methodcoverage' < $REPORT_PATH)
        echo "Coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
          echo "Code coverage ($COVERAGE%) is below the threshold ($THRESHOLD%)"
          exit 1
        fi
